name: Deploy to Amazon ECS

on:
  push:
    branches: [ "master" ]

env:
  DOCKER_HUB_REPOSITORY: yelloman/jap-your-name

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build -x test  # 테스트를 건너뛰도록 설정

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ env.DOCKER_HUB_REPOSITORY }}:$IMAGE_TAG .
          docker push ${{ env.DOCKER_HUB_REPOSITORY }}:$IMAGE_TAG
          echo "image=${{ env.DOCKER_HUB_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.sha }}
            docker stop my-app-container || true
            docker rm my-app-container || true
            docker run -d --name my-app-container -p 8080:8080 ${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.sha }}
